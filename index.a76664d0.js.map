{"mappings":"YAAO,IAAMA,EAAO,CAClBC,YAAaC,SAASC,cAAc,iBACpCC,OAAQF,SAASC,cAAc,WAC/BE,MAAOH,SAASC,cAAc,UAC9BG,QAASJ,SAASC,cAAc,cCJ3B,SAASI,EAAgBC,GAC9B,OAAOC,MACL,gEAAwEC,OAARF,EAAQ,mFAEvEG,MAAK,SAAAC,GACJ,IAAKA,EAASC,GAAI,CAChB,GAAwB,MAApBD,EAASE,OACX,MAAO,GAET,MAAM,IAAIC,MAAMH,EAASE,O,CAE3B,OAAOF,EAASI,M,IAEjBC,OAAM,SAAAZ,GACLa,QAAQb,MAAMA,E,ICdb,SAASc,EAAaC,GAM3B,OALqBA,EAClBC,KAAI,SAAAC,GACH,MAAO,YAA2BZ,OAAfY,EAAGC,IAAI,UAA4Gb,OAApGY,EAAGE,OAAO,GAAGC,KAAK,oFAAoJf,OAAlEY,EAAGE,OAAO,GAAGC,KAAK,kDAAyHf,OAAzEY,EAAGE,OAAO,GAAGE,YAAY,kDAAyEhB,OAAzBY,EAAGE,OAAO,GAAGG,YAAY,O,IAE3SC,KAAK,G,CCWV,SAASC,EAAWC,GAClB9B,EAAKM,QAAQyB,UAAYD,C,CCblBrB,MAAM,GAAwBC,OAFrB,sCAEU,aAAkBA,OAH5C,0EAIGC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GAAI,CAChB,GAAwB,MAApBD,EAASE,OACX,MAAO,GAET,MAAM,IAAIC,MAAMH,EAASE,O,CAE3B,OAAOF,EAASI,M,IAEjBC,OAAM,SAAAZ,GACLa,QAAQb,MAAMA,E,IDTDM,MENZ,SAAqBS,GAI1B,OAHeA,EACZC,KAAI,SAAAW,G,IAAGC,EAAED,EAAFC,GAAIR,EAAIO,EAAJP,K,MAAW,iBAAuBf,OAANuB,EAAG,KAAQvB,OAALe,EAAK,Y,IAClDG,KAAK,G,IFG2BjB,MAarC,SAAoBmB,GAClB9B,EAAKC,YAAYiC,mBAAmB,YAAaJ,E,IAbnD9B,EAAKC,YAAYkC,iBAAiB,UAElC,SAA0BC,GACxBA,EAAIC,iBAGW9B,EAFCP,EAAKC,YAAYqC,OAEO3B,KAAKQ,GAAcR,KAAKkB,E","sources":["src/js/refs.js","src/js/cat-api.js","src/js/markupOneCat.js","src/index.js","src/js/fetchBreeds.js","src/js/breadSelect.js"],"sourcesContent":["export const refs = {\n  breedSelect: document.querySelector('.breed-select'),\n  loader: document.querySelector('.loader'),\n  error: document.querySelector('.error'),\n  catInfo: document.querySelector('.cat-info'),\n};\n","export function fetchCatByBreed(breedId) {\n  return fetch(\n    `https://api.thecatapi.com/v1/images/search?limit=1&breed_ids=${breedId}&api_key=live_RewMHWqsKPM7un9j0u0UWgDN64BJIT9mT6w8PeYAc2ce07njo9Jbutxu06LIAaDH`\n  )\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 404) {\n          return [];\n        }\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n","export function markupOneCat(data) {\n  const markupOneCat = data\n    .map(el => {\n      return `<img src=${el.url} alt=\"${el.breeds[0].name}\" width=\"400\"/><div class=\"text-container\"><p><span class=\"text\">Breeds:</span> ${el.breeds[0].name}</p><p><span class=\"text\">Description:</span> ${el.breeds[0].description}</p><p><span class=\"text\">Temperament:</span> ${el.breeds[0].temperament}</p>`;\n    })\n    .join('');\n  return markupOneCat;\n}\n","import './css/styles.css';\nimport { fetchBreeds } from './js/fetchBreeds';\nimport { breadSelect } from './js/breadSelect';\nimport { refs } from './js/refs';\nimport { fetchCatByBreed } from './js/cat-api';\nimport { markupOneCat } from './js/markupOneCat';\nfetchBreeds('cat').then(breadSelect).then(fillOption);\nrefs.breedSelect.addEventListener('change', selectCatByBreed);\n\nfunction selectCatByBreed(evt) {\n  evt.preventDefault();\n  const breedId = refs.breedSelect.value;\n\n  const markup = fetchCatByBreed(breedId).then(markupOneCat).then(fillOneCat);\n}\n\nfunction fillOneCat(markup) {\n  refs.catInfo.innerHTML = markup;\n}\nfunction fillOption(markup) {\n  refs.breedSelect.insertAdjacentHTML('beforeend', markup);\n}\n","const MY_KEY =\n  'live_RewMHWqsKPM7un9j0u0UWgDN64BJIT9mT6w8PeYAc2ce07njo9Jbutxu06LIAaDH';\nconst BREDS_URL = 'https://api.thecatapi.com/v1/breeds';\nexport const fetchBreeds = name => {\n  return fetch(`${BREDS_URL}?api_key=${MY_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        if (response.status === 404) {\n          return [];\n        }\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n","export function breadSelect(data) {\n  const markup = data\n    .map(({ id, name }) => `<option value=${id}>${name}</option>`)\n    .join('');\n  return markup;\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","breedSelect","document","querySelector","loader","error","catInfo","$8994e83c1b13b9e2$export$57b7d3a597416aa2","breedId","fetch","concat","then","response","ok","status","Error","json","catch","console","$f76a4b128a4bc5ee$export$838c4097b450f062","data","map","el","url","breeds","name","description","temperament","join","$b8f9b7833fa37166$var$fillOneCat","markup","innerHTML","param","id","insertAdjacentHTML","addEventListener","evt","preventDefault","value"],"version":3,"file":"index.a76664d0.js.map"}